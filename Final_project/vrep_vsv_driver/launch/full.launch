<?xml version="1.0" encoding="UTF-8" ?>

<launch>

 <!-- joy node -->
  <node respawn="false" pkg="joy" type="joy_node" name="joy" >
    <!-- <param name="dev" type="string" value="/dev/input/js0" /> -->
    <!-- <param name="deadzone" value="0.12" /> -->
    <param name="autorepeat_rate" value="10.0" />
  </node>

 <!-- Shore followers -->
  <node pkg="shore_follower" type="shore_follower_drive.py" name="shore_follower_drive" output="screen">
      <param name="meta_file" value="$(find shore_follower)/models/nn/models/best_model.meta" />
      <param name="model_file" value="$(find shore_follower)/models/nn/models/best_model" />
      <!-- rotation speed corresponding to left or right commands -->
      <param name="max_vel" value="1.0" />

      <remap from="/shore_follower_drive/image" to="/vrep/kisionSensor"/>
  </node>

  <node pkg="shore_follower2" type="shore_follower_drive.py" name="shore_follower_drive2" output="screen">
      <param name="meta_file" value="$(find shore_follower2)/models/nn/models/best_model.meta" />
      <param name="model_file" value="$(find shore_follower2)/models/nn/models/best_model" />
      <!-- rotation speed corresponding to left or right commands -->
      <param name="twist_factor" value="0.7" />
      <param name="linear_vel" value="0.5" />

      <remap from="/shore_follower_drive2/image" to="/vrep/lineSensor"/>
      <remap from="/shore_follower_drive2/twist" to="/vsv_driver/twistCommand"/>
  </node>


  <!-- Metal detector -->

 <node pkg="metal_detector" type="metal_detector_node.py" name="metal_detector" output="screen">
      <remap from="/metal_detector/measurements" to="/vrep/metalDetector"/>
      <param name="world_frame" value="/world" />
      <param name="sensor_frame" value="/VSV/Tool"/>
      <param name="Np" value="1000" />
      <param name="min_displacement" value="0.01" />
      <param name="min_measurement" value="0.15" />
  </node>


 <!-- Axes -->

  <node pkg="vrep_vsv_driver" type="teleop_base.py" name="teleop_base" output="screen">
      <param name="axis_linear" value="1" type="int"/>
      <param name="axis_angular" value="0" type="int"/>
      <param name="scale_linear" value="1.0" type="double"/>
      <param name="scale_angular" value="0.7" type="double"/>
      <remap from="/teleop_base/joy" to="/joy"/>
      <remap from="/teleop_base/twistCommand" to="/vsv_driver/twistCommand"/>
  </node>

  <node pkg="vrep_vsv_driver" type="vsv_arm_ik.py" name="arm_ik" output="screen">
      <param name="vsv_name" value="VSV"/>
      <param name="max_velocity" value="0.5"/>
      <remap from="/arm_ik/joint_command" to="/VSV/aggregated/command"/>
      <remap from="/arm_ik/joint_state" to="/VSV/aggregated/state"/>
  </node>

  <node pkg="vrep_vsv_driver" type="arm_height_control" name="arm_height_control" output="screen">
      <param name="base_frame" value="VSV/Kision_sensor" />
      <param name="gain" value="-3" type="double"/>
      <param name="threshold_z" value="0.25" type="double"/>
      <remap from="/arm_height_control/scans" to="/depth_registered/points"/>
  </node>

  <node pkg="vrep_vsv_driver" type="teleop_geom.py" name="teleop" output="screen">
      <param name="vsv_name" value="VSV"/>
      <param name="axis_arm_x" value="3"/>
      <param name="axis_arm_y" value="6"/>
      <param name="axis_arm_z" value="4"/>
      <param name="arm_velocity" value="0.25"/>
      <param name="home_button" value="1"/>
      <param name="ready_button" value="0"/>
      <param name="move_button" value="2"/>
      <remap from="/teleop/joy" to="/joy"/>
      <remap from="/teleop/position_command" to="/arm_ik/position"/>
      <remap from="/teleop/twist_command" to="/arm_ik/twist"/>
      <remap from="/teleop/tool_command" to="/arm_ik/tool_orientation"/>
      <remap from="/teleop/height_controller" to="/arm_height_control/height_twist" />
      <remap from="/teleop/lateral_controller" to="/shore_follower_drive/twist" />
      <param name="min_arm_distance" value="0.9"/>   
      <param name="max_arm_distance" value="3.7"/> 
      <param name="sensor_frame" value="VSV/Kision_sensor" />
      <param name="arm_frame" value="VSV/ArmBase" />   
  </node>

  <node pkg="vrep_vsv_driver" type="vsv_driver.py" name="vsv_driver" output="screen">
      <param name="vsv_name" value="VSV"/>
      <param name="min_radius" value="5.0"/>
  </node>

  <node pkg="vrep_vsv_driver" type="vsv_arm.py" name="vsv_arm" output="screen">
      <param name="vsv_name" value="VSV"/>
  </node>


</launch>
